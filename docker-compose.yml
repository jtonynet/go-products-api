version: '3.7'

networks:
  go-products-network:
    driver: bridge

volumes:
  mysql-go-products-api-data:
    external: false
  prometheus-data:
    external: false
  grafana-data:
    external: false

services:
  mysql-go-products-api:
    image: mysql:latest
    container_name: mysql-go-products-api
    hostname: mysql-go-products-api
    restart: always
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: go-products-api
    ports:
      - 3306:3306
    volumes:
      - mysql-go-products-api-data:/var/lib/mysql
    networks:
      - go-products-network

  go-products-api:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysql-go-products-api
    container_name: go-products-api
    hostname: go-products-api
    ports: 
      - "8080:8080"
    tty: true
    networks:
      - go-products-network

  prometheus-go-products-api:
    image: prom/prometheus:latest
    container_name: prometheus-go-products-api
    restart: unless-stopped
    volumes:
      - ./tools/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - go-products-network
    depends_on:
      - go-products-api

  grafana-go-products-api:
    image: grafana/grafana
    container_name: grafana-go-products-api
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - go-products-network
    depends_on:
      - prometheus-go-products-api


